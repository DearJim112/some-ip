/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.someip 3.1.12.v201801251434.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1/com/microchip/IDemoSomeIPStubAdapter.hpp>
#include <v1/com/microchip/IDemo.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/SomeIP/AddressTranslator.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace com {
namespace microchip {

std::shared_ptr<CommonAPI::SomeIP::StubAdapter> createIDemoSomeIPStubAdapter(
                   const CommonAPI::SomeIP::Address &_address,
                   const std::shared_ptr<CommonAPI::SomeIP::ProxyConnection> &_connection,
                   const std::shared_ptr<CommonAPI::StubBase> &_stub) {
    return std::make_shared< IDemoSomeIPStubAdapter<::v1::com::microchip::IDemoStub>>(_address, _connection, _stub);
}

void initializeIDemoSomeIPStubAdapter() {
    CommonAPI::SomeIP::AddressTranslator::get()->insert(
        "local:com.microchip.IDemo:v1_0:com.microchip.demo",
         0x10, 0x5678, 1, 0);
    CommonAPI::SomeIP::Factory::get()->registerStubAdapterCreateMethod(
        IDemo::getInterface(),
        &createIDemoSomeIPStubAdapter);
}

INITIALIZER(registerIDemoSomeIPStubAdapter) {
    CommonAPI::SomeIP::Factory::get()->registerInterface(initializeIDemoSomeIPStubAdapter);
}
} // namespace microchip
} // namespace com
} // namespace v1
